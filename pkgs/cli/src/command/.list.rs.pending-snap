{"run_id":"1759116880-949028418","line":600,"new":{"module_name":"nmcr__command__list__tests","snapshot_name":"list_output_snapshot","metadata":{"source":"pkgs/cli/src/command/list.rs","assertion_line":600,"expression":"output"},"snapshot":"📁 rust (./examples/basic/tmpls/rust.md:1)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust.md:3)\n   └── .gitignore (./examples/basic/tmpls/rust.md:20)\n\n   Files:\n\n   📄 rust_package_cargo_toml (./examples/basic/tmpls/rust.md:3)\n      -> Cargo.toml (toml)\n\n      Crate manifest file.\n\n      Arguments:\n\n      - description [string]\n      - name [string]\n\n   📄 rust_package_gitignore (./examples/basic/tmpls/rust.md:20)\n      -> .gitignore\n\n      Rust crate .gitignore file.\n\n\n📁 rust_crate_lib (./examples/basic/tmpls/rust-crate.md:3)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust-crate.md:7)\n   └── src\n       └── lib.rs (./examples/basic/tmpls/rust-crate.md:18)\n\n   Rust crate library template.\n\n   Files:\n\n   📄 rust_crate_lib_cargo_toml (./examples/basic/tmpls/rust-crate.md:7)\n      -> ./Cargo.toml (toml)\n\n      Arguments:\n\n      - pkg_name [string]\n\n   📄 rust_crate_lib_src_lib_rs (./examples/basic/tmpls/rust-crate.md:18)\n      -> ./src/lib.rs (rs)\n\n\n📄 react_react_component (./examples/basic/tmpls/react.md:5)\n   -> [string] (tsx)\n\n   React component file template with optional props.\n\n   Arguments:\n\n   - props [boolean]: Include a props interface scaffold.\n   - name [string]: Component name."},"old":{"module_name":"nmcr__command__list__tests","metadata":{},"snapshot":"📁 rust (./examples/basic/tmpls/rust.md:1)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust.md:3)\n   └── .gitignore (./examples/basic/tmpls/rust.md:20)\n\n   Files:\n\n   📄 rust_package_cargo_toml (./examples/basic/tmpls/rust.md:3)\n      -> Cargo.toml (toml)\n\n      Crate manifest file.\n\n   📄 rust_package_gitignore (./examples/basic/tmpls/rust.md:20)\n      -> .gitignore\n\n      Rust crate .gitignore file.\n\n\n📁 rust_crate_lib (./examples/basic/tmpls/rust-crate.md:3)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust-crate.md:7)\n   └── src\n       └── lib.rs (./examples/basic/tmpls/rust-crate.md:18)\n\n   Rust crate library template.\n\n   Files:\n\n   📄 rust_crate_lib_cargo_toml (./examples/basic/tmpls/rust-crate.md:7)\n      -> ./Cargo.toml (toml)\n\n   📄 rust_crate_lib_src_lib_rs (./examples/basic/tmpls/rust-crate.md:18)\n      -> ./src/lib.rs (rs)\n\n\n📄 react_react_component (./examples/basic/tmpls/react.md:5)\n   -> [string] (tsx)\n\n   React component file template with optional props.\n\n   Arguments:\n\n   - props [string]: Whether to include props interface.\n   - name [string]: Component name."}}
{"run_id":"1759117237-188269097","line":600,"new":{"module_name":"nmcr__command__list__tests","snapshot_name":"list_output_snapshot","metadata":{"source":"pkgs/cli/src/command/list.rs","assertion_line":600,"expression":"output"},"snapshot":"📁 rust (./examples/basic/tmpls/rust.md:1)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust.md:3)\n   └── .gitignore (./examples/basic/tmpls/rust.md:20)\n\n   Files:\n\n   📄 rust_package_cargo_toml (./examples/basic/tmpls/rust.md:3)\n      -> Cargo.toml (toml)\n\n      Crate manifest file.\n\n      Arguments:\n\n      - description [string]\n      - name [string]\n\n   📄 rust_package_gitignore (./examples/basic/tmpls/rust.md:20)\n      -> .gitignore\n\n      Rust crate .gitignore file.\n\n\n📁 rust_crate_lib (./examples/basic/tmpls/rust-crate.md:3)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust-crate.md:7)\n   └── src\n       └── lib.rs (./examples/basic/tmpls/rust-crate.md:18)\n\n   Rust crate library template.\n\n   Files:\n\n   📄 rust_crate_lib_cargo_toml (./examples/basic/tmpls/rust-crate.md:7)\n      -> ./Cargo.toml (toml)\n\n      Arguments:\n\n      - pkg_name [string]\n\n   📄 rust_crate_lib_src_lib_rs (./examples/basic/tmpls/rust-crate.md:18)\n      -> ./src/lib.rs (rs)\n\n\n📄 react_react_component (./examples/basic/tmpls/react.md:5)\n   -> [string] (tsx)\n\n   React component file template with optional props.\n\n   Arguments:\n\n   - props [boolean]: Include a props interface scaffold.\n   - name [string]: Component name."},"old":{"module_name":"nmcr__command__list__tests","metadata":{},"snapshot":"📁 rust (./examples/basic/tmpls/rust.md:1)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust.md:3)\n   └── .gitignore (./examples/basic/tmpls/rust.md:20)\n\n   Files:\n\n   📄 rust_package_cargo_toml (./examples/basic/tmpls/rust.md:3)\n      -> Cargo.toml (toml)\n\n      Crate manifest file.\n\n   📄 rust_package_gitignore (./examples/basic/tmpls/rust.md:20)\n      -> .gitignore\n\n      Rust crate .gitignore file.\n\n\n📁 rust_crate_lib (./examples/basic/tmpls/rust-crate.md:3)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust-crate.md:7)\n   └── src\n       └── lib.rs (./examples/basic/tmpls/rust-crate.md:18)\n\n   Rust crate library template.\n\n   Files:\n\n   📄 rust_crate_lib_cargo_toml (./examples/basic/tmpls/rust-crate.md:7)\n      -> ./Cargo.toml (toml)\n\n   📄 rust_crate_lib_src_lib_rs (./examples/basic/tmpls/rust-crate.md:18)\n      -> ./src/lib.rs (rs)\n\n\n📄 react_react_component (./examples/basic/tmpls/react.md:5)\n   -> [string] (tsx)\n\n   React component file template with optional props.\n\n   Arguments:\n\n   - props [string]: Whether to include props interface.\n   - name [string]: Component name."}}
{"run_id":"1759117404-787939299","line":600,"new":{"module_name":"nmcr__command__list__tests","snapshot_name":"list_output_snapshot","metadata":{"source":"pkgs/cli/src/command/list.rs","assertion_line":600,"expression":"output"},"snapshot":"📁 rust (./examples/basic/tmpls/rust.md:1)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust.md:3)\n   └── .gitignore (./examples/basic/tmpls/rust.md:20)\n\n   Files:\n\n   📄 rust_package_cargo_toml (./examples/basic/tmpls/rust.md:3)\n      -> Cargo.toml (toml)\n\n      Crate manifest file.\n\n      Arguments:\n\n      - description [string]\n      - name [string]\n\n   📄 rust_package_gitignore (./examples/basic/tmpls/rust.md:20)\n      -> .gitignore\n\n      Rust crate .gitignore file.\n\n\n📁 rust_crate_lib (./examples/basic/tmpls/rust-crate.md:3)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust-crate.md:7)\n   └── src\n       └── lib.rs (./examples/basic/tmpls/rust-crate.md:18)\n\n   Rust crate library template.\n\n   Files:\n\n   📄 rust_crate_lib_cargo_toml (./examples/basic/tmpls/rust-crate.md:7)\n      -> ./Cargo.toml (toml)\n\n      Arguments:\n\n      - pkg_name [string]\n\n   📄 rust_crate_lib_src_lib_rs (./examples/basic/tmpls/rust-crate.md:18)\n      -> ./src/lib.rs (rs)\n\n\n📄 react_react_component (./examples/basic/tmpls/react.md:5)\n   -> [string] (tsx)\n\n   React component file template with optional props.\n\n   Arguments:\n\n   - props [boolean]: Include a props interface scaffold.\n   - name [string]: Component name."},"old":{"module_name":"nmcr__command__list__tests","metadata":{},"snapshot":"📁 rust (./examples/basic/tmpls/rust.md:1)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust.md:3)\n   └── .gitignore (./examples/basic/tmpls/rust.md:20)\n\n   Files:\n\n   📄 rust_package_cargo_toml (./examples/basic/tmpls/rust.md:3)\n      -> Cargo.toml (toml)\n\n      Crate manifest file.\n\n   📄 rust_package_gitignore (./examples/basic/tmpls/rust.md:20)\n      -> .gitignore\n\n      Rust crate .gitignore file.\n\n\n📁 rust_crate_lib (./examples/basic/tmpls/rust-crate.md:3)\n   ->\n   ├── Cargo.toml (./examples/basic/tmpls/rust-crate.md:7)\n   └── src\n       └── lib.rs (./examples/basic/tmpls/rust-crate.md:18)\n\n   Rust crate library template.\n\n   Files:\n\n   📄 rust_crate_lib_cargo_toml (./examples/basic/tmpls/rust-crate.md:7)\n      -> ./Cargo.toml (toml)\n\n   📄 rust_crate_lib_src_lib_rs (./examples/basic/tmpls/rust-crate.md:18)\n      -> ./src/lib.rs (rs)\n\n\n📄 react_react_component (./examples/basic/tmpls/react.md:5)\n   -> [string] (tsx)\n\n   React component file template with optional props.\n\n   Arguments:\n\n   - props [string]: Whether to include props interface.\n   - name [string]: Component name."}}
{"run_id":"1759117473-201526303","line":600,"new":null,"old":null}
{"run_id":"1759117509-649117959","line":568,"new":null,"old":null}
